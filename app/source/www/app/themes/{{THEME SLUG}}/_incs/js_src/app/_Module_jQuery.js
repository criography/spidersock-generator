/* ===================================================================================
 * Name     : Module_jQuery
 * Version  : 1.0
 * URL      : https://github.com/criograhy/
 *
 * Author   : Marek Lenik / Criography
 *            http://criography.com
 *
 * Licensed under the MIT license.
 * ===================================================================================
 * Quite Details description of what this module/plugin does.
 *
 * @DEPENDS jQuery 1.10.2
 * =================================================================================== */

/*jshint smarttabs: true */
/*global jQuery:true, Modernizr:true */


(function($, window, document, undefined){
	"use strict";

	var pluginName  = 'Module_jQuery',
			defaults    = {

										};






	/* ===================================================================================
	 * CONSTRUCTOR
	 * ===================================================================================
	 * Description of what's happening here
	 *
	 * @constructor
	 * @private
	 * @param {object} el jQuery object upon which the plugin was called
	 * @param {object} options parameters passed to the plugin
	 * ===================================================================================*/

		function Module_jQuery(element, options){
			this.element = element;
			this.options = $.extend({}, defaults, options);


			this.init();
		}

	/* ===================================================================================
	 * ENDOF: CONSTRUCTOR
	 * ===================================================================================*/










	/* ===================================================================================
	 * HELPERS / PRIVATE METHODS
	 * ===================================================================================*/



		/* -----------------------------------------------------------------------------
		 * _privateMethod
		 * -----------------------------------------------------------------------------
		 * Description of the method
		 *
		 * @private
		 * @param {object} attr Description of the attribute
		 * -----------------------------------------------------------------------------*/
			var _privateMethod = function _privateMethod(attr){

			};
		/* -----------------------------------------------------------------------------
		 * ENDOF: _privateMethod
		 * -----------------------------------------------------------------------------*/



	/* ===================================================================================
	 * ENDOF: HELPERS
	 * ===================================================================================*/









	/**===================================================================================
	 * PROTOTYPE METHODS (PUBLIC)
	 * ===================================================================================*/
		Module_jQuery.prototype = {





		/**-----------------------------------------------------------------------------
		 * otherMethod
		 * -----------------------------------------------------------------------------
		 * Description
		 *
		 * @this {object} main object
		 * @return {bool} description
		 * -----------------------------------------------------------------------------*/

			otherMethod : function(){

				return true;
			},

		/**-----------------------------------------------------------------------------
		 * ENDOF: otherMethod
		 * -----------------------------------------------------------------------------*/









		/**-----------------------------------------------------------------------------
		 * init
		 * -----------------------------------------------------------------------------
		 * Description
		 *
		 * @this {object} main object
		 * -----------------------------------------------------------------------------*/

			init : function(){
		    /* if you need to call upon this from a nested function, make sure to cache it put it in a local scope by:
		    * var _this = this;
		    */


				/* describe what's (and why, if necessary) being called here */
				this.otherMethod();




			}

		/**-----------------------------------------------------------------------------
		 * ENDOF: init
		 * -----------------------------------------------------------------------------*/






	};
	/**===================================================================================
	 * ENDOF: PROTOTYPE METHODS
	 * ===================================================================================*/











	/** ===================================================================================
	 * PLUGIN WRAPPER
	 * ===================================================================================
	 * A really lightweight plugin wrapper around the constructor,
	 * preventing against multiple instantiations
	 * ===================================================================================*/
	$.fn[pluginName] = function(options){

		return this.each(function(){
			if( !$.data(this, "plugin_" + pluginName) ){
				$.data(this, "plugin_" + pluginName, new Module_jQuery(this, options));
			}
		});

	};
	/**===================================================================================
	 * ENDOF: PLUGIN WRAPPER
	 * ===================================================================================*/


})(jQuery, window, document);